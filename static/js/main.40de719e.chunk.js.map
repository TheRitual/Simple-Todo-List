{"version":3,"sources":["Form/styled.js","Form/index.js","Form/useFormActions.js","Tasks/styled.js","Tasks/index.js","Buttons/styled.js","Buttons/index.js","Section/styled.js","Section/index.js","Header/index.js","Container/styled.js","Container/index.js","utils/useTasks.js","utils/useLocalStorageState.js","App.js","reportWebVitals.js","index.js"],"names":["NewTaskForm","styled","form","NewTaskInput","input","NewTaskButton","button","Form","addNewTaskFunction","useState","newTaskContent","setNewTaskContent","inputRef","useRef","onFormSubmit","event","preventDefault","current","focus","replace","trim","useFormActions","addNewTask","onSubmit","autoFocus","placeholder","value","onChange","target","ref","className","TaskList","ul","TaskItem","li","hidden","css","TaskButton","done","removeButton","TaskContent","span","Tasks","props","tasks","map","task","hideDone","onClick","toggleTaskDone","id","content","removeTask","ButtonsContainer","div","Button","Buttons","length","toggleHideDone","setAllDone","disabled","every","StyledSection","section","SectionHeader","header","SectionTitle","h2","SectionBody","Section","title","body","extraHeaderContent","Header","MainContainer","main","Container","children","useTasks","keyName","initialValue","localStorageState","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","useLocalStorageState","setTasks","filter","App","setHideDone","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40de719e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const NewTaskForm = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    grid-gap: 20px;\r\n    @media (max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const NewTaskInput = styled.input`\r\n    padding: 10px;\r\n    border: 1px solid #ddd;\r\n`;\r\n\r\n\r\nexport const NewTaskButton = styled.button`\r\n    border:none;\r\n    background-color: #008080;\r\n    color: #fff;\r\n    padding: 10px;\r\n    transition: 0.3s;\r\n    \r\n    &:hover {\r\n        background-color: rgb(0, 153, 153);\r\n        transform: scale(1.1);\r\n    }\r\n\r\n    &:active {\r\n        background-color: rgb(0, 179, 179);\r\n    }\r\n`;","import { useFormActions } from \"./useFormActions\";\r\nimport { NewTaskForm, NewTaskInput, NewTaskButton } from \"./styled\";\r\n\r\nconst Form = ({ addNewTask }) => {\r\n    const { onFormSubmit, newTaskContent, setNewTaskContent, inputRef } = useFormActions(addNewTask);\r\n\r\n    return (\r\n        <NewTaskForm onSubmit={onFormSubmit}>\r\n            <NewTaskInput\r\n                autoFocus\r\n                placeholder=\"What to do?\"\r\n                value={newTaskContent}\r\n                onChange={(event) => setNewTaskContent(event.target.value)}\r\n                ref={inputRef}\r\n            />\r\n            <NewTaskButton className=\"form__button\">Add Task</NewTaskButton>\r\n        </NewTaskForm>);\r\n};\r\n\r\nexport default Form;","import { useRef, useState } from \"react\";\r\n\r\nexport const useFormActions = (addNewTaskFunction) => {\r\n\r\n    const [newTaskContent, setNewTaskContent] = useState(\"\");\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        inputRef.current.focus();\r\n        setNewTaskContent(newTaskContent.replace(/ +(?= )/g, '').trim());\r\n        if (newTaskContent !== \"\") {\r\n            addNewTaskFunction(newTaskContent);\r\n            setNewTaskContent(\"\");\r\n        }\r\n\r\n    }\r\n\r\n    return { onFormSubmit, newTaskContent, setNewTaskContent, inputRef }\r\n}","import styled, { css } from \"styled-components\";\r\n\r\nexport const TaskList = styled.ul`\r\n    list-style: none;\r\n    margin: 0;\r\n    padding: 0;\r\n`;\r\n\r\nexport const TaskItem = styled.li`\r\n    display: grid;\r\n    grid-template-columns: auto 1fr auto;\r\n    grid-gap: 10px;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ddd;\r\n    ${({ hidden }) => hidden && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const TaskButton = styled.button`\r\n    border: 0;\r\n    width: 30px;\r\n    height: 30px;\r\n    color: #fff;\r\n    padding: 0;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    ${({ done }) => done && css`\r\n        background-color: hsl(120, 61%, 34%);\r\n        &:hover {\r\n            background-color: hsl(120, 61%, 39%);\r\n        }\r\n    `}\r\n\r\n    ${({ removeButton }) => removeButton && css`\r\n        background-color: hsl(348, 83%, 47%);\r\n        &:hover {\r\n            background-color: hsl(348, 83%, 52%);\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const TaskContent = styled.span`\r\n    color: #000;\r\n    transition: 0.5s;\r\n    ${({ done }) => done && css`\r\n        text-decoration: line-through;\r\n        color: #999;\r\n    `}\r\n`;","import { TaskList, TaskItem, TaskButton, TaskContent } from \"./styled\";\r\n\r\nconst Tasks = (props) => (\r\n    <TaskList>\r\n        {props.tasks.map(task => (\r\n            <TaskItem key={task.id} hidden={task.done && props.hideDone}>\r\n                <TaskButton onClick={() => props.toggleTaskDone(task.id)} done>\r\n                    {task.done ? 'âœ“' : ''}\r\n                </TaskButton>\r\n                <TaskContent done={task.done}>\r\n                    {task.content}\r\n                </TaskContent>\r\n                <TaskButton onClick={() => props.removeTask(task.id)} removeButton>ðŸ—‘</TaskButton>\r\n            </TaskItem>\r\n        ))}\r\n    </TaskList>\r\n);\r\n\r\nexport default Tasks;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const Button = styled.button`    \r\n    background: transparent;\r\n    color: teal;\r\n    border: none;\r\n    margin: 0 0 0 20px;\r\n    transition: color 0.3s;\r\n\r\n    @media(max-width: 767px) {\r\n        flex-basis: 100%;\r\n    }\r\n\r\n    &:hover {\r\n        color: hsl(180, 100%, 35%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: #ccc;\r\n    }\r\n`;","import { ButtonsContainer, Button } from \"./styled\";\r\n\r\nconst Buttons = (props) => (\r\n     props.tasks.length > 0 && (\r\n     <ButtonsContainer>\r\n        <Button onClick={props.toggleHideDone}>\r\n            {props.hideDone ? \"Show\" : \"Hide\"} done\r\n        </Button>\r\n        <Button onClick={props.setAllDone} disabled={props.tasks.every(({done}) => done)}>\r\n            Mark All as Done\r\n        </Button>\r\n    </ButtonsContainer>)\r\n);\r\n\r\nexport default Buttons;","import styled from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n    margin: 10px 0;\r\n    background: white;\r\n    box-shadow: 0 0 5px #ddd;\r\n`;\r\n\r\nexport const SectionHeader = styled.header`\r\n    border-bottom: 1px solid #ddd;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    grid-gap: 20px;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px;\r\n    @media(max-width: 767px) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`;\r\n\r\nexport const SectionTitle = styled.h2`\r\n    font-size: 20px;\r\n    margin: 0;\r\n`;\r\n    \r\nexport const SectionBody = styled.div`\r\n    padding: 20px;\r\n`","import { StyledSection, SectionBody, SectionHeader, SectionTitle } from \"./styled\";\r\n\r\nconst Section = ({ title, body, extraHeaderContent }) => (\r\n    <StyledSection>\r\n        <SectionHeader>\r\n            <SectionTitle>{title}</SectionTitle>\r\n            {extraHeaderContent}\r\n        </SectionHeader>\r\n        <SectionBody>\r\n            {body}\r\n        </SectionBody>\r\n    </StyledSection>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n    <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n    max-width: 900px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n`;","import { MainContainer } from \"./styled\";\r\n\r\nconst Container = ({ children }) => (\r\n    <MainContainer>\r\n        {children}\r\n    </MainContainer>\r\n);\r\n\r\nexport default Container;","import { useLocalStorageState } from \"./useLocalStorageState\";\r\n\r\nexport const useTasks = () => {\r\n\r\n    const [tasks, setTasks] = useLocalStorageState(\"taskList\", []);\r\n\r\n    const removeTask = (id) => {\r\n        setTasks(tasks => tasks.filter(task => task.id !== id));\r\n    }\r\n\r\n    const toggleTaskDone = (id) => {\r\n        setTasks(tasks => tasks.map(task => {\r\n            if (task.id === id) {\r\n                return { ...task, done: !task.done };\r\n            }\r\n            return task;\r\n        }))\r\n    }\r\n\r\n    const setAllDone = () => {\r\n        setTasks(tasks => tasks.map(task => ({ ...task, done: true })));\r\n    }\r\n\r\n    const addNewTask = (content) => {\r\n        setTasks(tasks => [...tasks, {\r\n            content,\r\n            done: false,\r\n            id: tasks.length ? tasks[tasks.length - 1].id + 1 : 0,\r\n        }]);\r\n    }\r\n\r\n    return { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask };\r\n\r\n}","import { useEffect, useState } from \"react\";\r\n\r\nexport const useLocalStorageState = (keyName, initialValue) => {\r\n    const getInitialState = () => {\r\n        const localStorageState = localStorage.getItem(keyName);\r\n        if (localStorageState === null) {\r\n            return initialValue;\r\n        }\r\n        return JSON.parse(localStorageState);\r\n    }\r\n\r\n    const [state, setState] = useState(getInitialState);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(keyName, JSON.stringify(state));\r\n        // eslint-disable-next-line\r\n    }, [state]);\r\n    return [state, setState];\r\n}","import Form from \"./Form\";\nimport Tasks from \"./Tasks\"\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\nimport { useState } from \"react\";\nimport { useTasks } from \"./utils/useTasks\";\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const { tasks, removeTask, toggleTaskDone, setAllDone, addNewTask } = useTasks();\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone);\n  }\n\n  return (\n    <Container>\n      <Header title=\"ToDo List\" />\n      <Section title=\"Add a new Task\" body={< Form addNewTask={addNewTask} />} />\n      <Section\n        title=\"List of Tasks\"\n        extraHeaderContent={\n          <Buttons\n            tasks={tasks}\n            hideDone={hideDone}\n            toggleHideDone={toggleHideDone}\n            setAllDone={setAllDone}\n          />}\n        body={\n          <Tasks\n            tasks={tasks}\n            hideDone={hideDone}\n            removeTask={removeTask}\n            toggleTaskDone={toggleTaskDone}\n          />}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}