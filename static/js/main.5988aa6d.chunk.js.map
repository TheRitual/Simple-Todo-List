{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Header/index.js","Container/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","placeholder","Tasks","props","tasks","map","task","done","hideDoneTasks","content","Buttons","length","disabled","every","Section","title","body","extraHeaderContent","Header","Container","children","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSASeA,EAPF,kBACT,uBAAMC,UAAU,OAAhB,UACI,uBAAOA,UAAU,cAAcC,YAAY,gBAC3C,wBAAQD,UAAU,eAAlB,0BCcOE,G,MAjBD,SAACC,GAAD,OACV,oBAAIH,UAAU,QAAd,SACKG,EAAMC,MAAMC,KAAI,SAAAC,GAAI,OACjB,qBAAIN,UAAS,qBAAgBM,EAAKC,MAAQJ,EAAMK,cAAgB,uBAAyB,IAAzF,UAEI,wBAAQR,UAAU,0CAAlB,SACCM,EAAKC,KAAO,SAAM,KAEnB,sBAAMP,UAAS,wBAAmBM,EAAKC,KAAO,wBAA0B,IAAxE,SACCD,EAAKG,UAEN,wBAAQT,UAAU,sCAAlB,oCCCDU,G,MAZC,SAACP,GAAD,OACXA,EAAMC,MAAMO,OAAS,GACrB,sBAAKX,UAAU,UAAf,UACG,wBAAQA,UAAU,kBAAlB,SACKG,EAAMK,cAAgB,OAAS,SAEpC,wBAAQR,UAAU,kBAAkBY,SAAUT,EAAMC,MAAMS,OAAM,qBAAEN,QAAlE,mCCMOO,G,MAZC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAMC,EAAf,EAAeA,mBAAf,OACZ,0BAASjB,UAAU,UAAnB,UACI,yBAAQA,UAAU,kBAAlB,UACI,oBAAIA,UAAU,iBAAd,SAAgCe,IAC/BE,KAEL,qBAAKjB,UAAU,gBAAf,SACKgB,SCHEE,EANA,SAAC,GAAD,IAAEH,EAAF,EAAEA,MAAF,OACX,iCACA,6BAAKA,OCMMI,G,MANG,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAF,OACd,sBAAMpB,UAAU,YAAhB,SACKoB,MCGHhB,EAAQ,CACZ,CAACiB,GAAK,EAAGZ,QAAU,8BAAqBF,MAAO,GAC/C,CAACc,GAAK,EAAGZ,QAAU,wBAAeF,MAAO,IA2B5Be,MAtBf,WACE,OACE,eAAC,EAAD,WACI,cAAC,EAAD,CAAQP,MAAM,cACd,cAAC,EAAD,CACEA,MAAM,iBACNC,KAAM,cAAC,EAAD,MAER,cAAC,EAAD,CACED,MAAM,gBACNE,mBAAoB,cAAC,EAAD,CAChBb,MAAOA,EACPI,cAdQ,QAgBZQ,KAAM,cAAC,EAAD,CACJZ,MAAOA,EACPI,cAlBU,cCAPe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5988aa6d.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"form\">\r\n        <input className=\"form__input\" placeholder=\"What to do?\" />\r\n        <button className=\"form__button\">Add Task</button>\r\n    </form>\r\n);\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = (props) => (\r\n    <ul className=\"tasks\">\r\n        {props.tasks.map(task => (\r\n            <li className={`tasks__item${task.done && props.hideDoneTasks ? \" tasks__item--hidden\" : \"\"}`}>\r\n                \r\n                <button className=\"tasks__button tasks__button--toggleDone\">\r\n                {task.done ? 'âœ“' : ''}\r\n                </button>\r\n                <span className={`tasks__content${task.done ? \" tasks__content--done\" : \"\"}`}>\r\n                {task.content}\r\n                </span>\r\n                <button className=\"tasks__button tasks__button--remove\">ðŸ—‘</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nexport default Tasks;","import \"./style.css\";\r\n\r\nconst Buttons = (props) => (\r\n     props.tasks.length > 0 && (\r\n     <div className=\"buttons\">\r\n        <button className=\"buttons__button\">\r\n            {props.hideDoneTasks ? \"Show\" : \"Hide\"}\r\n        </button>\r\n        <button className=\"buttons__button\" disabled={props.tasks.every(({done}) => done)}>\r\n            Mark All as Done\r\n        </button>\r\n    </div>)\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({title, body, extraHeaderContent}) => (\r\n    <section className=\"section\">\r\n        <header className=\"section__header\">\r\n            <h2 className=\"section__title\">{title}</h2>\r\n            {extraHeaderContent}\r\n        </header>\r\n        <div className=\"section__body\">\r\n            {body}\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default Section;","const Header = ({title}) => (\r\n    <header>\r\n    <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;","import \"./style.css\";\r\n\r\nconst Container = ({children}) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","import Form from \"./Form\";\nimport Tasks from \"./Tasks\"\nimport Buttons from \"./Buttons\";\nimport Section from \"./Section\";\nimport Header from \"./Header\";\nimport Container from \"./Container\";\n\nconst tasks = [\n  {id : 1, content : \"PrzejÅ›Ä‡ na Reacta\", done : false},\n  {id : 2, content : \"ZjeÅ›Ä‡ obiad\", done : true},\n]\n\nconst hideDoneTasks = false;  \n\nfunction App() {\n  return (\n    <Container>\n        <Header title=\"ToDo List\"/>\n        <Section\n          title=\"Add a new Task\"\n          body={<Form />}\n        />\n        <Section\n          title=\"List of Tasks\"\n          extraHeaderContent={<Buttons\n              tasks={tasks}\n              hideDoneTasks={hideDoneTasks}\n          />}\n          body={<Tasks\n            tasks={tasks}\n            hideDoneTasks={hideDoneTasks}/>}\n        />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}